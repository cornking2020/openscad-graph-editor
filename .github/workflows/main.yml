# Whenever a push is made to the master branch then run the job
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' 
env:
  GODOT_VERSION: 3.4.4
  
jobs:
  # job id, can be anything
  export_editor:
    # Always use ubuntu-latest for this action
    runs-on: ubuntu-latest
    container: barichello/godot-ci:mono-3.4.4
    # Job name, can be anything
    name: Export Game Job
    steps:
      # Always include the checkout step so that 
      # your project is available for Godot to export
      - name: checkout
        uses: actions/checkout@v2.3.1
        # Ensure that you get the entire project history
        with:
          fetch-depth: 0
      - name: Install dotnet tools
        run: |
          wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb
          apt-get update -qq
          apt-get install -y apt-transport-https
          apt-get update -qq
          apt-get install -y dotnet-sdk-6.0
      - name: Install Dependencies
        run: |
          nuget restore
          
      - name: Setup templates
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
      
      - name: get tag from version
        id: tag_version
        run: |
            echo ::set-output name=TAG_VERSION::${GITHUB_REF#refs/tags/v}
      
      - name: install wine
        id: wine_install
        run: |
          apt-get install -y wine64
          echo ::set-output name=WINE_PATH::$(which wine64)
      
      - name: export
        run: |
          mkdir -p builds/linux
          godot --export Linux/X11
          mkdir -p builds/osx
          godot --export "Mac OSX"
          mkdir -p builds/windows
          godot --export "Windows Desktop"
          
      - name: zip
        run: |
          mkdir builds/archives
          (cd builds/linux; zip -r ../archives/Linux.zip .)
          (cd builds/windows; zip -r ../archives/Windows.zip .)
          cp builds/osx/openscad-graph-editor.app.zip builds/archives/MacOSX.zip

      - name: create release
        uses: softprops/action-gh-release@v0.1.14
        with:
          tag_name: ${{ steps.tag_version.outputs.TAG_VERSION }}
          files: ./builds/archives/*
          fail_on_unmatched_files: true
          body: See [CHANGES.md](https://github.com/derkork/openscad-graph-editor/blob/master/CHANGES.md) for details.